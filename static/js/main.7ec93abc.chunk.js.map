{"version":3,"sources":["components/navigation.js","components/Formulario.js","components/Opcion.js","components/Producto.js","components/Seccion.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","className","this","props","titulo","cantidadSecciones","Component","Formulario","state","ids","nombreSeccion","productos","handleInput","bind","handleSubmit","e","preventDefault","target","value","name","setState","id","Math","floor","random","prevState","onAddSeccion","type","onChange","placeholder","onClick","Opcion","index","idp","remove","opcion","opciones","map","nombreOpcion","precioAdiconal","handleRemoveopcion","ido","isLoggedIn","Producto","nombreProducto","descripcion","precio","modalActualizar","mostrarOpciones","mostrarModalActualizar","cerrarModalActualizar","handleEditName","nuevaopcion","addopcion","removep","producto","cambio","mp","Button","color","Modal","isOpen","ModalHeader","ModalBody","FormGroup","min","ModalFooter","removeo","handleREmoveProducto","Seccion","mostrarProductos","nuevoproducto","addproducto","ns","cambios","seccion","menu","Card","cambiop","removeproducto","removeopcion","addOpcion","handleRemoveSeccion","App","menus","handleAddSeccion","handleRemoveProducto","handleRemoveOpcion","handleAddProducto","handleAddOpcion","downloadMenu","changeSeccion","changeProducto","window","confirm","filter","i","console","log","splice","push","cambioSeccion","contador","arreglo","registro","nombreP","descripcionp","preciop","jsonData","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","document","createElement","setAttribute","click","onSubmit","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7ec93abc.chunk.js","sourcesContent":["import React, { Component} from \"react\"\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n              <p className=\"text-white\">\r\n              {this.props.titulo}</p>\r\n                  <span className=\"badge badge-pill badge-light ml-2\">\r\n                      Cantidad de Secciones: {this.props.cantidadSecciones}\r\n                  </span>\r\n                  \r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component {\r\n    constructor(){\r\n      super();\r\n      this.state={\r\n        ids:0,\r\n        nombreSeccion: \"\",\r\n        productos:[]\r\n    }\r\n    this.handleInput=this.handleInput.bind(this)\r\n    this.handleSubmit=this.handleSubmit.bind(this)\r\n   }  \r\n\r\n   handleInput(e){\r\n    e.preventDefault()\r\n    const {value, name} =e.target \r\n    this.setState({\r\n      [name]: value\r\n    })\r\n   }\r\n   \r\n   handleSubmit(){\r\n    const id=Math.floor(Math.random() * 10000) + 1\r\n    this.setState(prevState=> (prevState.ids=id))\r\n    this.props.onAddSeccion(this.state)}\r\n   \r\n\r\n   render() {\r\n    const seccion= <div className=\"card\" >\r\n       <form className=\"card-body\" >\r\n          <div className=\"form-group\" >\r\n           <input type=\"text\" onChange={this.handleInput}   name=\"nombreSeccion\" className=\"form-control\" placeholder=\"Nombre de Sección\"></input>\r\n          </div>\r\n         \r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)} >Agregar Nueva Seccion</button>\r\n          \r\n          </form>\r\n         \r\n       </div> \r\n    \r\n    return (\r\n      \r\nseccion\r\n    )\r\n  }\r\n}export default Formulario;","import React, { Component} from \"react\"\r\n\r\nclass Opcion extends Component{\r\n    handleRemoveopcion(id){\r\n        const index=this.props.ids\r\n        const idp=this.props.idp\r\n        this.props.remove(index,idp,id)\r\n      }  \r\n    render(){\r\n        const opcion= this.props.opciones.map((opcion,id)=>{return (\r\n              <div className=\"row \" key={opcion.ido}>\r\n                <div className=\"col\">\r\n             {opcion.nombreOpcion}</div>\r\n             <div className=\"col\">\r\n             Precio Adicional: {opcion.precioAdiconal}\r\n             </div>\r\n             <div className=\"col\">\r\n             <button className=\"btn btn-danger\"\r\n                 onClick={this.handleRemoveopcion.bind(this,id)}>\r\n                 Borrar Opcion\r\n               </button> \r\n               </div>\r\n            </div>\r\n            \r\n            \r\n            )     \r\n        })\r\n    if(this.props.isLoggedIn){\r\n          return(\r\n            \r\n    opcion)}\r\n    return(\"\")\r\n   \r\n}}\r\nexport default Opcion;","import React, { Component} from \"react\"\r\nimport Opcion from './Opcion.js'\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  ModalFooter,\r\n\r\n} from \"reactstrap\";\r\n\r\nclass Producto extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n    idp:\"\",\r\n    nombreProducto: \"\",\r\n    descripcion: \"\",\r\n    precio:\"\",\r\n    nombreOpcion:\"\",\r\n    precioAdiconal:\"\",\r\n    modalActualizar: false,\r\n    mostrarOpciones:true}\r\n  this.handleInput=this.handleInput.bind(this)\r\n  this.handleSubmit=this.handleSubmit.bind(this)\r\n  this.mostrarModalActualizar=this.mostrarModalActualizar.bind(this)\r\n  this.cerrarModalActualizar=this.cerrarModalActualizar.bind(this)\r\n  this.handleEditName=this.handleEditName.bind(this)\r\n  this.mostrarOpciones=this.mostrarOpciones.bind(this)\r\n  \r\n }  \r\n    handleRemoveSeccion(id){\r\n        this.props.remove(id)\r\n      }\r\n    handleInput(e){\r\n    const {value, name} =e.target \r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    }\r\n    handleSubmit(ids,idp){\r\n      const id=Math.floor(Math.random() * 10000) + 1\r\n      const nuevaopcion={ido:id,nombreOpcion: this.state.nombreOpcion, precioAdiconal:this.state.precioAdiconal}\r\n      this.props.addopcion(ids,idp,nuevaopcion)\r\n    }    \r\n    handleREmoveProducto(id){\r\n        const index=this.props.ids\r\n        this.props.removep(index,id)\r\n      }  \r\n\r\n      mostrarModalActualizar(producto){\r\n        this.setState({ \r\n          idp:producto.idp,\r\n          nombreProducto:producto.nombreProducto,\r\n          descripcion:producto.descripcion,\r\n          precio: producto.precio,\r\n          modalActualizar: true });\r\n      };\r\n  \r\n      cerrarModalActualizar(){\r\n        this.setState({ modalActualizar: false });\r\n      };\r\n      handleEditName(){\r\n        this.props.cambio(this.props.ids,this.state.idp,this.state.nombreProducto,this.state.descripcion,this.state.precio)\r\n        this.setState({modalActualizar:false})\r\n      }\r\n      mostrarOpciones(){\r\n        const mp=this.state.mostrarOpciones\r\n        this.setState({ \r\n          mostrarOpciones: !mp});\r\n      };\r\n    render(){\r\n        const producto= this.props.producto.map((producto,id)=>{return (\r\n            <div className=\"card\" key={producto.idp}>\r\n             <div className=\"card-header\">\r\n               <h3>{producto.nombreProducto}</h3> \r\n             </div>\r\n             <div className=\"card-body\">\r\n               <p>Descripción:  {producto.descripcion}</p>\r\n               <p>Precio Orginal:  {producto.precio}</p>\r\n\r\n               <Button color=\"primary\" onClick={this.mostrarModalActualizar.bind(this,producto)}>Editar Producto</Button>\r\n               <Button color=\"secondary\" onClick={this.mostrarOpciones.bind(this)}>Ocultar/Mostrar Opciones</Button>  \r\n               <Modal isOpen={this.state.modalActualizar} >\r\n          <ModalHeader>\r\n           <div><h3>Editar Registro</h3></div>\r\n          </ModalHeader>\r\n          <ModalBody >\r\n            <FormGroup>\r\n              <label>\r\n                Nombre Producto: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombreProducto\"\r\n                type=\"text\"\r\n                onChange={this.handleInput}\r\n                placeholder={this.state.nombreProducto}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Descripcion: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"descripcion\"\r\n                type=\"text\"\r\n                onChange={this.handleInput}\r\n                placeholder={this.state.descripcion}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Precio: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"precio\"\r\n                type=\"number\" min=\"0\"\r\n                onChange={this.handleInput}\r\n                placeholder={this.state.precio}\r\n              />\r\n            </FormGroup>\r\n            \r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.handleEditName()}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n               <Opcion isLoggedIn={this.state.mostrarOpciones} opciones={producto.opciones} ids={this.props.ids} idp={id} remove={this.props.removeo}/>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"text\" onChange={this.handleInput} name=\"nombreOpcion\" className=\"form-control\" placeholder=\"Nombre de la opción\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"number\" min=\"0\" onChange={this.handleInput} name=\"precioAdiconal\" className=\"form-control\" placeholder=\"Precio Adicional\"></input>\r\n                    </div>\r\n                    <button  type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this,this.props.ids,id)}>\r\n                   Agregar Nueva Opción\r\n            </button>    \r\n                    </div>\r\n\r\n             <div className=\"card-footer\">\r\n               <button className=\"btn btn-danger\"\r\n                 onClick={this.handleREmoveProducto.bind(this,id)}>\r\n                 Borrar Producto\r\n               </button>\r\n\r\n             </div>\r\n            </div>\r\n            \r\n            \r\n            )     \r\n        })\r\n        if(this.props.isLoggedIn){\r\n        return(\r\n          \r\n  producto)}\r\n  return(\"\")\r\n}}\r\nexport default Producto;","import React, { Component} from \"react\"\r\nimport Producto from './Producto.js'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  ModalFooter,\r\n\r\n} from \"reactstrap\";\r\n\r\nclass Seccion extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n    ids:\"\",\r\n    nombreSeccion:\"\",\r\n    nombreProducto: \"\",\r\n    descripcion: \"\",\r\n    precio:\"\",\r\n    opciones:[],\r\n    modalActualizar: false,\r\n    mostrarProductos: true}\r\n  this.handleInput=this.handleInput.bind(this)\r\n  this.handleSubmit=this.handleSubmit.bind(this)\r\n  this.mostrarModalActualizar=this.mostrarModalActualizar.bind(this)\r\n  this.cerrarModalActualizar=this.cerrarModalActualizar.bind(this)\r\n  this.handleEditName=this.handleEditName.bind(this)\r\n  this.mostrarProductos=this.mostrarProductos.bind(this)\r\n\r\n}  \r\n    handleRemoveSeccion(id){\r\n        this.props.remove(id)\r\n      }\r\n    handleInput(e){\r\n    const {value, name} =e.target \r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    }\r\n    handleSubmit(id){\r\n      const idp=Math.floor(Math.random() * 10000) + 1\r\n      const nuevoproducto={idp:idp,nombreProducto: this.state.nombreProducto, descripcion: this.state.descripcion, precio:this.state.precio, opciones: this.state.opciones}\r\n      this.props.addproducto(id,nuevoproducto)\r\n    }  \r\n    mostrarModalActualizar(id,ns){\r\n      this.setState({ \r\n        ids:id,\r\n        nombreSeccion:ns,\r\n        modalActualizar: true });\r\n    };\r\n\r\n    cerrarModalActualizar(){\r\n      this.setState({ modalActualizar: false });\r\n    };\r\n    handleEditName(){\r\n      this.props.cambios(this.state.ids,this.state.nombreSeccion)\r\n      this.setState({modalActualizar:false})\r\n    }\r\n  \r\n    mostrarProductos(){\r\n      const mp=this.state.mostrarProductos\r\n      this.setState({ \r\n        mostrarProductos: !mp});\r\n    };\r\n    render(){\r\n        const secciones= this.props.seccion.map((menu,id)=>\r\n        {\r\n      \r\n        return (\r\n          <Card key={menu.ids}>\r\n            <div className=\"card-header\">\r\n            <div className=\"row\">\r\n               <h3 className=\"col\">{menu.nombreSeccion}</h3>\r\n               <div className=\"col\">                    \r\n          <Button color=\"primary\" onClick={this.mostrarModalActualizar.bind(this,menu.ids,menu.nombreSeccion)}>Editar Nombre</Button> \r\n          <Button color=\"secondary\" onClick={this.mostrarProductos.bind(this)}>Ocultar/Mostrar Productos</Button> \r\n          <Modal isOpen={this.state.modalActualizar} >\r\n          <ModalHeader>\r\n           <div><h3>Editar Registro</h3></div>\r\n          </ModalHeader>\r\n          <ModalBody >\r\n            <FormGroup>\r\n              <label>\r\n                Nombre seccion: \r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"nombreSeccion\"\r\n                type=\"text\"\r\n                onChange={this.handleInput}\r\n                placeholder={this.state.nombreSeccion}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.handleEditName()}\r\n            >\r\n              Editar\r\n            </Button>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n                  \r\n                   </div> \r\n                   </div> \r\n                   </div> \r\n            <div className=\"card-body\">\r\n              <Producto  isLoggedIn={this.state.mostrarProductos} cambio={this.props.cambiop} producto={menu.productos} removep={this.props.removeproducto} ids={id} removeo={this.props.removeopcion} addopcion={this.props.addOpcion} />\r\n                    <div className=\"form-group\">\r\n                    <input type=\"text\" onChange={this.handleInput} name=\"nombreProducto\" className=\"form-control\" placeholder=\"Nombre de Producto\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"text\" onChange={this.handleInput} name=\"descripcion\" className=\"form-control\" placeholder=\"Descripción de Producto\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input type=\"number\" min=\"0\" onChange={this.handleInput} name=\"precio\" className=\"form-control\" placeholder=\"Precio\"></input>\r\n                    </div>\r\n            </div>\r\n            <button  type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this,id)}>\r\n                   Agregar Nuevo Producto\r\n            </button>            \r\n            <div className=\"card-footer\">\r\n            <button  className=\"btn btn-danger\" onClick={this.handleRemoveSeccion.bind(this,id)}> \r\n                  Borrar Sección\r\n            </button>\r\n            </div>\r\n            </Card>\r\n          )     \r\n    })\r\nreturn(secciones)\r\n}}\r\nexport default Seccion;","import React,{Component} from \"react\"\n\nimport './App.css';\nimport Navigation from './components/navigation.js'\nimport {menus} from './menus.json'\nimport Formulario from './components/Formulario.js'\nimport Seccion from './components/Seccion.js'\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      menus\n    }\n    this.handleAddSeccion=this.handleAddSeccion.bind(this)\n    this.handleRemoveSeccion=this.handleRemoveSeccion.bind(this)\n    this.handleRemoveProducto=this.handleRemoveProducto.bind(this)\n    this.handleRemoveOpcion=this.handleRemoveOpcion.bind(this)\n    this.handleAddProducto=this.handleAddProducto.bind(this)\n    this.handleAddOpcion=this.handleAddOpcion.bind(this)\n    this.downloadMenu=this.downloadMenu.bind(this)\n    this.changeSeccion=this.changeSeccion.bind(this)\n    this.changeProducto=this.changeProducto.bind(this)\n  }\n  handleAddSeccion(seccion){\n    \n    this.setState(prevState => ({\n      menus: [...prevState.menus, seccion]\n    }))\n  }\n  handleRemoveSeccion(index){\n    \n    if( window.confirm(\"¿Seguro quieres borrar esta Sección y todos sus Productos?\")){\n      this.setState({\n      menus: this.state.menus.filter((e,i)=>{\n        return i !== index\n      })\n    })}}\n  handleRemoveProducto(index,id){\n    console.log(this.state.menus[index].productos[id])\n    if( window.confirm(`¿Seguro quieres borrar el Producto y sus Opcionales`)){\n      \n      this.setState(this.state.menus[index].productos.splice(id, 1));\n      }}\n  handleRemoveOpcion(index,idp,ido){\n    if( window.confirm(\"¿Seguro quieres borrar esta Opcion?\")){\n\n      this.setState(this.state.menus[index].productos[idp].opciones.splice(ido, 1));\n      }}\n  handleAddProducto(id,producto){\n    this.setState(prevState=> (prevState.menus[id].productos.push(producto)))\n      }    \n    handleAddOpcion(ids,idp,opcion){\n     this.setState(prevState=> (prevState.menus[ids].productos[idp].opciones.push(opcion)))\n      }\n     changeSeccion(id,cambioSeccion){\n      var contador=0\n      var arreglo = this.state;\n      arreglo.menus.map((registro) => \n      \n      {\n        if (id === registro.ids) {\n          arreglo.menus[contador].nombreSeccion= cambioSeccion;\n        }\n        contador++;\n      return(\"\")});\n     \n      this.setState({ arreglo })\n      \n         }\n      changeProducto(ids,idp,nombreP,descripcionp,preciop){\n        var contador=0\n        var arreglo = this.state;\n        arreglo.menus[ids].productos.map((registro) => \n        \n        {\n          if (idp === registro.idp) {\n            arreglo.menus[ids].productos[contador].nombreProducto= nombreP;\n            arreglo.menus[ids].productos[contador].descripcion= descripcionp;\n            arreglo.menus[ids].productos[contador].precio= preciop;\n          }\n          contador++;\n          return(\"\")});\n       \n        this.setState({ arreglo })\n\n\n\n      }\n      downloadMenu() { \n        const jsonData=this.state\n        let dataStr = JSON.stringify(jsonData);\n        let dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n        let exportFileDefaultName = 'Menu.json';\n    \n        let linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n\n      }\n\n\n  \n  render() {\n  return (\n    <div className=\"App\"  onSubmit={e => { e.preventDefault(); }} >\n        <Navigation titulo= \"Generador de Menu\" cantidadSecciones={this.state.menus.length}/>\n        <Formulario onAddSeccion={this.handleAddSeccion}/>\n    <div className=\"container\"> \n        <Seccion cambios={this.changeSeccion} cambiop={this.changeProducto} seccion={this.state.menus} remove={this.handleRemoveSeccion} removeproducto={this.handleRemoveProducto} removeopcion={this.handleRemoveOpcion} addproducto={this.handleAddProducto} addOpcion={this.handleAddOpcion} />\n    </div>\n    <button className=\"btn btn-danger\" onClick={this.downloadMenu.bind(this)}>\n                  Descargar Menu\n            </button>\n    </div>\n  );\n  }\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}